Arithmetic {
  Exp = AddExp
      | VectorExp
      | MatricesExp
      | BasicFunctions
      
  AddExp = AddExp_plus
         | AddExp_minus
         | UnaryOperators 
         | MulExp
         | Constants

  MulExp = MulExp_times
         | MulExp_div
         | MulExp_power
         | number

  VectorExp = VectorExp_plus
            | VectorExp_minus
            | VectorExp_mul
            | VectorExp_div
            | VectorExp_pow
            | VectorExp_dot
            | Vector

  MatricesExp = MatricesExp_plus
              | MatricesExp_minus
              | Matrices

  MatricesExp_plus = MatricesExp "+++" MatricesExp 
  
  MatricesExp_minus = MatricesExp "---" MatricesExp 

  VectorExp_plus = VectorExp "++" VectorExp 

  VectorExp_minus = VectorExp "--" VectorExp

  VectorExp_mul = VectorExp "**" VectorExp

  VectorExp_div = VectorExp "//" VectorExp

  VectorExp_pow = VectorExp "^^" VectorExp

  VectorExp_dot = VectorExp "." VectorExp

  VectorExp_cross = VectorExp "x" VectorExp

  AddExp_plus = AddExp "+" AddExp

  AddExp_minus = AddExp "-" AddExp

  MulExp_times = AddExp "*" AddExp

  MulExp_div = AddExp "/" AddExp

  MulExp_power = AddExp "^" AddExp

  Sequence = ListOf<number , sep>

  Vector = "[" Sequence "]"

  Matrices = "<" MultiSequence ">"

  MultiSequence = ListOf<Vector,msep>

  UnaryOperators = Ceil
                 | Floor
                 | Squareroot

  Ceil = "~" AddExp

  Floor = "_" AddExp

  Squareroot = "_/" AddExp

  BasicFunctions = Sin
                 | Cosine
                 | Tangent
                 | Secant
                 | Cotangent
                 | Cosecant

  Sin = "sin" "(" Exp ")" 

  Cosine = "cos" "(" Exp ")" 

  Tangent = "tan" "(" Exp ")"

  Cotangent = "cot" "(" Exp ")"

  Secant = "sec" "(" Exp ")"

  Cosecant = "cosec" "(" Exp ")"

  Constants = E
            | PI

  E = "e"

  PI = "pi"

  number = negative
         | decimal 
         | whole
          
  whole = digit+

  decimal = digit+ "." digit+

  negative = "-"number

  sep = ","

  msep = "|"
}
